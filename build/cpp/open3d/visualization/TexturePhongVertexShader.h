// Automatically generated header file for shader.
// See LICENSE.txt for full license statement.

const char * const TexturePhongVertexShader = 
"#version 330\n"
"\n"
"in vec3 vertex_position;\n"
"in vec3 vertex_normal;\n"
"in vec2 vertex_uv;\n"
"\n"
"out vec3 vertex_position_world;\n"
"out vec3 vertex_normal_camera;\n"
"out vec3 eye_dir_camera;\n"
"out mat4 light_dir_camera_4;\n"
"out vec2 fragment_uv;\n"
"\n"
"uniform mat4 MVP;\n"
"uniform mat4 V;\n"
"uniform mat4 M;\n"
"uniform mat4 light_position_world_4;\n"
"\n"
"void main()\n"
"{\n"
"  gl_Position = MVP * vec4(vertex_position, 1);\n"
"  vertex_position_world = (M * vec4(vertex_position, 1)).xyz;\n"
"\n"
"  vec3 vertex_position_camera = (V * M * vec4(vertex_position, 1)).xyz;\n"
"  eye_dir_camera = vec3(0, 0, 0) - vertex_position_camera;\n"
"\n"
"  vec4 v = vec4(vertex_position_camera, 1);\n"
"  light_dir_camera_4 = V * light_position_world_4 - mat4(v, v, v, v);\n"
"\n"
"  vertex_normal_camera = (V * M * vec4(vertex_normal, 0)).xyz;\n"
"  if (dot(eye_dir_camera, vertex_normal_camera) < 0.0)\n"
"    vertex_normal_camera = vertex_normal_camera * -1.0;\n"
"\n"
"  fragment_uv = vertex_uv;\n"
"}\n"
"\n"
;
